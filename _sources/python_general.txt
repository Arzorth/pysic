.. file:python_general

Why Python?
-----------

`Python`_ is a programming language with a simple human readable syntax yet powerful features and
an extensive library. Python is an interpreted language meaning it does not need to be compiled.
One can simply feed the source code to an interpreter which reads and interprets it during run.
The Python interpreter can also perform calculations, read and write files, render graphics,
etc. making Python a powerful tool for scripting. Python is also an object based language
enabling sophisticated object oriented programming.

In computational physics codes, the most common method of performing the calculations is to have
the program read input files to extract the necessary parameters, perform the simulation based on
the given input, and print output based on the results. The generated data is then analysed using 
separate tools. In some cases, more common in commercial programs, the user can control the
program through a graphical user interface.

In Pysic, another approach is chosen. Pysic is not a "black box" simulator that turns input data to
output data. Instead, Pysic is a *Python module*. In essence, it is a library of tools one can use
within Python to perform complicated calculations. Instead of writing an input file - often
a complicated and error prone collection of numbers - the user needs
to build the simulation in Python. Pysic can then be used in evaluating the energies,
forces and other physical quantities of the given system. Python syntax is in general simple and
simplicity and user friendlyness has also been a key goal in the design of Pysic syntax.

Since Python is a programming language, having Pysic be a part of the language makes it straightforward
to write scripts that generate the physical system to be studied and also extract the needed information
from the simulations.
Instead of generating enormous amounts of data which would then have to be fed to some other analysis
program, one can precisely control what kind of data should be produced in the simulations and even analyse
the results simultaneously as the simulation is run. Even controlling the simulation based on the
produced data is not only possible but easy.

The downside of Pysic being a Python module instead of an independent program is that one has to know the
basics of how to run Python. `Python documentation`_ is the best resource for getting started, but some
simple first step instructions and :ref:`examples` are also given in this document.


.. _Python: http://www.python.org
.. _Python documentation: http://docs.python.org/

